@model KickerShop.Models.Orders

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit order</h2>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<p>
    <div class="text-danger">
        @ViewBag.Error
    </div>
</p>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Client_id, "Client:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Client_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Client_id, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DeliveryType_id, "Delivery type:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("DeliveryType_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DeliveryType_id, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PayType_id, "Payment type:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PayType_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PayType_id, "", new { @class = "text-danger" })
        </div>
    </div>
        @{ int i = 0;}
        @foreach (var item in Model.OrderDetails)
        {
      <div>
        <b><h5>Product @(@i + 1)</h5></b>
            <div class="form-group">
                @Html.LabelFor(model => item.Product_id, "Product:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Product_id", null, htmlAttributes: new { @Name = "[" + i + "].Product_id", @class = "form-control" })
                    @Html.ValidationMessageFor(model => item.Product_id, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => item.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => item.Quantity, new { htmlAttributes = new { @Name = "[" + i + "].Quantity", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => item.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @Html.HiddenFor(model => item.OrderDetail_id, new { @Name = "[" + i + "].OrderDetail_id" })
                    <input type="button" value="Remove product" class="remove" />
                    </div>
                </div>
            </div>
            i++;
        }
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save order" id="submit" class="btn btn-default" />
        </div>
    </div>
</div>
}
@section scripts{
    <script>
        var ordDetailsIds = Array();
        $(".remove").click(function () {
            ordDetailsIds.push($(this).prev().val());
            $(this).parent().parent().parent().remove();
        })
        $("#submit").click(function () {
            $.ajax({
                url: '/Orders/DeleteDetail',
                method: 'POST',
                data: { details: ordDetailsIds },
                success: function (data) {
                    alert(data);
                }
            })
            $("form").submit();
        })
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
