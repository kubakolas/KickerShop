

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace KickerShop.Models
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class KickerShopEntities : DbContext
{
    public KickerShopEntities()
        : base("name=KickerShopEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<Clients> ClientSet { get; set; }

    public virtual DbSet<Delivery_types> Delivery_typeSet { get; set; }

    public virtual DbSet<OrderDetails> OrderDetailSet { get; set; }

    public virtual DbSet<Orders> OrderSet { get; set; }

    public virtual DbSet<Payment_types> Payment_typeSet { get; set; }

    public virtual DbSet<Payments> PaymentSet { get; set; }

    public virtual DbSet<Products> ProductSet { get; set; }

    public virtual DbSet<database_firewall_rules> database_firewall_rules { get; set; }

    public virtual DbSet<Report> Report { get; set; }


    public virtual ObjectResult<ClientHistory_Result> ClientHistory(Nullable<int> clientid)
    {

        var clientidParameter = clientid.HasValue ?
            new ObjectParameter("clientid", clientid) :
            new ObjectParameter("clientid", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientHistory_Result>("ClientHistory", clientidParameter);
    }


    public virtual int InsertPayment(Nullable<int> order_id)
    {

        var order_idParameter = order_id.HasValue ?
            new ObjectParameter("order_id", order_id) :
            new ObjectParameter("order_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPayment", order_idParameter);
    }


    public virtual ObjectResult<DiscountValue_Result> DiscountValue()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DiscountValue_Result>("DiscountValue");
    }


    public virtual ObjectResult<DiscountValue1_Result> DiscountValue1()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DiscountValue1_Result>("DiscountValue1");
    }


    public virtual ObjectResult<MostProfitableProducts_Result> MostProfitableProducts(Nullable<int> number)
    {

        var numberParameter = number.HasValue ?
            new ObjectParameter("number", number) :
            new ObjectParameter("number", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MostProfitableProducts_Result>("MostProfitableProducts", numberParameter);
    }


    public virtual int ProductUpdate(Nullable<int> productid, string name, Nullable<double> unitprice, Nullable<int> quantity)
    {

        var productidParameter = productid.HasValue ?
            new ObjectParameter("productid", productid) :
            new ObjectParameter("productid", typeof(int));


        var nameParameter = name != null ?
            new ObjectParameter("name", name) :
            new ObjectParameter("name", typeof(string));


        var unitpriceParameter = unitprice.HasValue ?
            new ObjectParameter("unitprice", unitprice) :
            new ObjectParameter("unitprice", typeof(double));


        var quantityParameter = quantity.HasValue ?
            new ObjectParameter("quantity", quantity) :
            new ObjectParameter("quantity", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductUpdate", productidParameter, nameParameter, unitpriceParameter, quantityParameter);
    }

}

}

